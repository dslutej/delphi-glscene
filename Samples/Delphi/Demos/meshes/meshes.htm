<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Meshes demos</title>
</head>

<body bgcolor="#FFFFFF" link="#0000FF" vlink="#800080" lang="FR"
style="tab-interval:35.4pt">

<p class="MsoPlainText"><font size="4" face="Courier New"><b>Meshes&nbsp;:</b></font></p>

<ul>
    <li><a href="actor/actor.dpr"><b>actor</b></a><b>&nbsp;:</b><ul>
            <li>using the TActor object to load Quake II model (.md2)</li>
            <li>displaying an actor's frame names</li>
            <li>animating an actor (morph animation)</li>
        </ul>
    </li>
    <li><a href="actorms3d/actorms3d.dpr"><b>actor</b></a><b>&nbsp;:</b><ul>
            <li>using the TActor object to load Quake II model (.md2)</li>
            <li>displaying an actor's frame names</li>
            <li>animating an actor (morph animation)</li>
        </ul>
    </li>
    <li><a href="actortwocam/actortwocam.dpr"><b>actortwocam</b></a><b>&nbsp;:</b><ul>
            <li>moving a TActor (Quake II model with wepon) in a
                small scenery</li>
            <li>doom-like (keyboard only) movement, with walk/run,
                turn/strafe</li>
            <li>switching between first-person and third-person
                views</li>
        </ul>
    </li>
    <li><a href="csg/csg.dpr"><b>csg</b></a><b>&nbsp;:</b><ul>
            <li>Constructive Solid Geometry.</li>
            <li>The CSG system uses BSP to optimize what triangles it considers.</li>
            <li>Features: CSG_Union, CSG_Subtraction, CSG_Intersection.</li>
        </ul>
    </li>
    <li><a href="shadedterrain/shadedterrain.dpr"><b>shadedterrain</b></a><b>&nbsp;:</b><ul>
            <li>Shaded terrain rendering demo.</li>
            <li>...</li>
        </ul>
    </li>
    <li><a href="feedback/feedback.dpr"><b>feedback</b></a><b>&nbsp;:</b><ul>
            <li>This demo shows how to use a GLFeedback object to
   extract mesh data from regular GLScene objects.</li>
            <li>The GLFeedback object</li>
        </ul>
    </li>
    <li><a href="formula/formula.dpr"><b>formula</b></a><b>&nbsp;:</b><ul>
            <li>using the TMesh object to plot a formula in 3D</li>
            <li>triangle and triangle-strip meshes to make
                regular, grid-based, height-fields meshes</li>
        </ul>
    </li>
    <li><a href="mushroom/mushroom.dpr"><b>mushroom</b></a><b>&nbsp;:</b><ul>
            <li>using the TFreeForm to load a 3DStudio (.3DS)
                mesh</li>
            <li>using TGLProxyObject to duplicate an object</li>
            <li>uses fog and a textured &quot;ground&quot;</li>
        </ul>
    </li>
    <li><a href="centering/centering.dpr"><b>centering</b></a><b>&nbsp;:</b><ul>
            <li>using AutoCentering for a TFreeForm's mesh</li>
            <li>effects of various AutoCentering options</li>
        </ul>
    </li>
    <li><a href="skeletal/skeletal.dpr"><b>skeletal</b></a><b>&nbsp;:</b><ul>
            <li>using the TActor object to an Half-Life model (.smd)</li>
            <li>animating an actor (skeletal animation)</li>
        </ul>
    </li>
    <li><a href="expolygon/expolygon.dpr"><strong>expolygon</strong></a>
        :<ul>
            <li>using TMultiPolygon for rendering complex
                polygons</li>
            <li>automatic tesselation of polygons with holes and
                cutoffs</li>
        </ul>
    </li>
    <li><a href="portal/portal.dpr"><b>portal</b></a><b>&nbsp;:</b><ul>
            <li>using the TPortal object to render indoor scenes</li>
            <li>basic wolfenstein-like &quot;level designer&quot;
                for generating the maze mesh</li>
        </ul>
    </li>
    <li><a href="subdivide/subdivide.dpr"><b>subdivide</b></a><b>&nbsp;:</b><ul>
            <li>Early mesh subdivision refinement demo</li>
            <li>MD2 format isn't really suited for refinement</li>
        </ul>
    </li>
    <li><a href="synthterr/synthterr.dpr"><b>synthterr</b></a><b>&nbsp;:</b><ul>
            <li>using TTerrainRender and TGLCustomHDS</li>
            <li>1D textures</li>
        </ul>
    </li>
    <li><a href="terrain/terrain.dpr"><b>terrain</b></a><b>&nbsp;:</b><ul>
            <li>using TTerrainRender and TGLBitmapHDS to render a simple landscape</li>
            <li>Full-screen mode and using THUDText/TBitmapFont for a FPS counter</li>
            <li>Positional 3D sounds</li>
        </ul>
    </li>
    <li><a href="ducky/ducky.dpr"><b>ducky</b></a><b>&nbsp;:</b><ul>
            <li>Loading NURBS into a GLScene FreeForm/Actor object.</li>
            <li>Use the resolution slider to increase or decrease the models triangle count dynamically.</li>
        </ul>
    </li>
    <li><a href="tiles/tiles.dpr"><b>tileplane</b></a><b>&nbsp;:</b><ul>
            <li>Illustrates the use of TGLTilePlane to render an area made of tiled textures placed in a grid.</li>
            <li>...</li>
        </ul>
    </li>
    <li><a href="tiles/tiles.dpr"><b>tiles</b></a><b>&nbsp;:</b><ul>
            <li>Illustrates the use of TGLTilePlane to render an area made of tiled textures placed in a grid.</li>
            <li>The TGLTilePlane object</li>
        </ul>
    </li>
    <li><a href="tree/tree.dpr"><b>tree</b></a><b>&nbsp;:</b><ul>
            <li>GLTree Editor.</li>
            <li>Interactive parameter changes display tree variations.</li>
        </ul>
    </li>
</ul>

<p><a href="..\demos.htm">Back</a></p>
</body>
</html>
